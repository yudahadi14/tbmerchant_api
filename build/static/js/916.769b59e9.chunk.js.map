{"version":3,"file":"static/js/916.769b59e9.chunk.js","mappings":"uPAWMA,GAAYC,EAAAA,EAAAA,IAAW,iBAAO,CAClCC,IAAK,CACHC,OAAQ,mBAEVC,GAAI,CACFC,MAAO,QACPC,OAAQ,YA+EZ,WAAeC,EAAAA,EAAAA,KAZS,SAACC,GACvB,MAAO,CACLC,eAAgBD,EAAME,OAAOC,UAIN,SAACC,GAC1B,MAAO,CACLC,gBAAiB,SAACC,EAAMC,GAAP,OAAkBH,GAASI,EAAAA,EAAAA,IAAaF,EAAMC,QAInE,EA5EkB,SAACE,GACjB,IAAQJ,EAAoCI,EAApCJ,gBAAiBJ,EAAmBQ,EAAnBR,eACzBS,EAAAA,GAAAA,IAAe,CAACC,EAAAA,KAEhBC,EAAAA,WAAgB,WACdP,MACC,IACH,IAAMQ,EAAUrB,IAChB,OACE,UAAC,IAAD,CAAKsB,UAAWD,EAAQnB,IAAxB,WACE,UAAC,KAAD,CAAMqB,WAAS,EAACC,QAAS,EAAGC,eAAgB,SAA5C,WACE,SAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CAAYC,QAAQ,KAAKC,MAAM,SAA/B,2BAIF,UAAC,KAAD,CACEH,MAAI,EACJC,GAAI,GACJJ,WAAS,EACTE,eAAgB,SAChBK,WAAY,SACZC,UAAW,SANb,WAQE,gBAAKC,IAAKC,EAAQX,UAAWD,EAAQjB,GAAI8B,IAAI,aAC7C,SAAC,IAAD,CAAYN,QAAQ,QAApB,mDAKJ,mBACA,SAAC,IAAD,CACEO,cAAe,EACfC,SAAU,CAAEC,MAAO,KAFrB,SAMG5B,GACCA,EAAe6B,KAAI,SAACZ,EAAMa,GACxB,OACE,SAAC,IAAD,WACE,SAAC,KAAD,CAAMhB,WAAS,EAACC,QAAS,EAAzB,SACGE,EAAKY,KAAI,SAAC3B,EAAO6B,GAChB,OACE,SAAC,KAAD,CAAMd,MAAI,EAACC,GAAI,EAAf,UACE,SAAC,KAAD,CACEc,MAAO9B,EAAM8B,MACbC,UAAW/B,EAAM+B,UACjBC,MAAOhC,EAAMgC,MACbC,OAAQjC,EAAMiC,OACdC,OAAQlC,EAAMkC,UANK,QAAUN,EAAQ,IAAMC,SAJrC,SAAWD,e","sources":["pages/ListKamar/index.js"],"sourcesContent":["import { Container, Grid, Box, Typography, Stack } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { CardKamar } from \"../../components\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, { Autoplay } from \"swiper\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport qrCode from \"../../assets/web_qr.jpg\";\r\n// Import Swiper styles\r\nimport \"swiper/css\";\r\nimport { getDataKamar } from \"../../redux/actions\";\r\nimport { connect } from \"react-redux\";\r\nconst useStyles = makeStyles(() => ({\r\n  box: {\r\n    margin: \"32px !important\",\r\n  },\r\n  qr: {\r\n    width: \"120px\",\r\n    height: \"auto\",\r\n  },\r\n}));\r\nconst ListKamar = (props) => {\r\n  const { actGetDataKamar, stateDataKamar } = props;\r\n  SwiperCore.use([Autoplay]);\r\n\r\n  React.useEffect(() => {\r\n    actGetDataKamar();\r\n  }, []);\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.box}>\r\n      <Grid container spacing={1} justifyContent={\"center\"}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h5\" align=\"center\">\r\n            DATA KAMAR\r\n          </Typography>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          container\r\n          justifyContent={\"center\"}\r\n          alignItems={\"center\"}\r\n          direction={\"column\"}\r\n        >\r\n          <img src={qrCode} className={classes.qr} alt=\"Kode QR\" />\r\n          <Typography variant=\"body1\">\r\n            https://api.rsudcengkareng.com\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <br></br>\r\n      <Swiper\r\n        slidesPerView={1}\r\n        autoplay={{ delay: 5000 }}\r\n        // onSlideChange={() => console.log(\"slide change\")}\r\n        // onSwiper={(swiper) => console.log(swiper)}\r\n      >\r\n        {stateDataKamar &&\r\n          stateDataKamar.map((item, rootI) => {\r\n            return (\r\n              <SwiperSlide key={\"slides\" + rootI}>\r\n                <Grid container spacing={2}>\r\n                  {item.map((kamar, index) => {\r\n                    return (\r\n                      <Grid item xs={4} key={\"kamar\" + rootI + \"-\" + index}>\r\n                        <CardKamar\r\n                          ruang={kamar.ruang}\r\n                          kapasitas={kamar.kapasitas}\r\n                          kelas={kamar.kelas}\r\n                          terisi={kamar.terisi}\r\n                          kosong={kamar.kosong}\r\n                        />\r\n                      </Grid>\r\n                    );\r\n                  })}\r\n                </Grid>\r\n              </SwiperSlide>\r\n            );\r\n          })}\r\n      </Swiper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    stateDataKamar: state.master.kamar,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    actGetDataKamar: (body, action) => dispatch(getDataKamar(body, action)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListKamar);\r\n"],"names":["useStyles","makeStyles","box","margin","qr","width","height","connect","state","stateDataKamar","master","kamar","dispatch","actGetDataKamar","body","action","getDataKamar","props","SwiperCore","Autoplay","React","classes","className","container","spacing","justifyContent","item","xs","variant","align","alignItems","direction","src","qrCode","alt","slidesPerView","autoplay","delay","map","rootI","index","ruang","kapasitas","kelas","terisi","kosong"],"sourceRoot":""}