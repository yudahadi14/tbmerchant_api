{"version":3,"file":"static/js/916.82fbf45f.chunk.js","mappings":"uPAWMA,GAAYC,EAAAA,EAAAA,IAAW,iBAAO,CAClCC,IAAK,CACHC,OAAQ,mBAEVC,GAAI,CACFC,MAAO,QACPC,OAAQ,YA8GZ,WAAeC,EAAAA,EAAAA,KAbS,SAACC,GACvB,MAAO,CACLC,gBAAiBD,EAAME,OAAOC,WAC9BC,WAAYJ,EAAME,OAAOG,UAIF,SAACC,GAC1B,MAAO,CACLC,gBAAiB,SAACC,EAAMC,GAAP,OAAkBH,GAASI,EAAAA,EAAAA,IAAaF,EAAMC,QAInE,EA3GkB,SAACE,GACjB,IAAQJ,EAAiDI,EAAjDJ,gBAAiBN,EAAgCU,EAAhCV,gBAAiBG,EAAeO,EAAfP,WAC1CQ,EAAAA,GAAAA,IAAe,CAACC,EAAAA,KAEhBC,EAAAA,WAAgB,WACdP,MACC,IACH,IAAMQ,EAAUvB,IAEVwB,EAAU,WAuDd,OApDIC,OAAOC,WAAa,KAEpB,SAAC,IAAD,CACEC,cAAe,EACfC,SAAU,CAAEC,MAAO,KAFrB,SAMGpB,GACCA,EAAgBqB,KAAI,SAACC,EAAMC,GACzB,OACE,SAAC,IAAD,WACE,SAAC,KAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACGH,EAAKD,KAAI,SAACjB,EAAOsB,GAChB,OACE,SAAC,KAAD,CAAMJ,MAAI,EAACK,GAAI,EAAf,UACE,SAAC,KAAD,CACEC,MAAOxB,EAAMwB,MACbC,UAAWzB,EAAMyB,UACjBC,MAAO1B,EAAM0B,MACbC,OAAQ3B,EAAM2B,OACdC,OAAQ5B,EAAM4B,UANK,QAAUT,EAAQ,IAAMG,SAJrC,SAAWH,SAuBrC,SAAC,KAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACGtB,GACCA,EAAWkB,KAAI,SAACjB,EAAOsB,GACrB,OACE,SAAC,KAAD,CAAMJ,MAAI,EAACK,GAAI,GAAf,UACE,SAAC,KAAD,CACEC,MAAOxB,EAAMwB,MACbC,UAAWzB,EAAMyB,UACjBC,MAAO1B,EAAM0B,MACbC,OAAQ3B,EAAM2B,OACdC,OAAQ5B,EAAM4B,UANM,SAAgBN,SAgBtD,OACE,UAAC,IAAD,CAAKO,UAAWnB,EAAQrB,IAAxB,WACE,UAAC,KAAD,CAAM+B,WAAS,EAACC,QAAS,EAAGS,eAAgB,SAA5C,WACE,SAAC,KAAD,CAAMZ,MAAI,EAACK,GAAI,GAAf,UACE,SAAC,IAAD,CAAYQ,QAAQ,KAAKC,MAAM,SAA/B,2BAIF,UAAC,KAAD,CACEd,MAAI,EACJK,GAAI,GACJH,WAAS,EACTU,eAAgB,SAChBG,WAAY,SACZC,UAAW,SANb,WAQE,gBAAKC,IAAKC,EAAQP,UAAWnB,EAAQnB,GAAI8C,IAAI,aAC7C,SAAC,IAAD,CAAYN,QAAQ,QAApB,mDAKJ,mBACA,SAACpB,EAAD,W","sources":["pages/ListKamar/index.js"],"sourcesContent":["import { Container, Grid, Box, Typography, Stack } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { CardKamar } from \"../../components\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, { Autoplay } from \"swiper\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport qrCode from \"../../assets/web_qr.jpg\";\r\n// Import Swiper styles\r\nimport \"swiper/css\";\r\nimport { getDataKamar } from \"../../redux/actions\";\r\nimport { connect } from \"react-redux\";\r\nconst useStyles = makeStyles(() => ({\r\n  box: {\r\n    margin: \"32px !important\",\r\n  },\r\n  qr: {\r\n    width: \"120px\",\r\n    height: \"auto\",\r\n  },\r\n}));\r\nconst ListKamar = (props) => {\r\n  const { actGetDataKamar, stateKamarMulti, stateKamar } = props;\r\n  SwiperCore.use([Autoplay]);\r\n\r\n  React.useEffect(() => {\r\n    actGetDataKamar();\r\n  }, []);\r\n  const classes = useStyles();\r\n\r\n  const Content = () => {\r\n    let html = \"\";\r\n\r\n    if (window.innerWidth > 630) {\r\n      html = (\r\n        <Swiper\r\n          slidesPerView={1}\r\n          autoplay={{ delay: 5000 }}\r\n          // onSlideChange={() => console.log(\"slide change\")}\r\n          // onSwiper={(swiper) => console.log(swiper)}\r\n        >\r\n          {stateKamarMulti &&\r\n            stateKamarMulti.map((item, rootI) => {\r\n              return (\r\n                <SwiperSlide key={\"slides\" + rootI}>\r\n                  <Grid container spacing={2}>\r\n                    {item.map((kamar, index) => {\r\n                      return (\r\n                        <Grid item xs={4} key={\"kamar\" + rootI + \"-\" + index}>\r\n                          <CardKamar\r\n                            ruang={kamar.ruang}\r\n                            kapasitas={kamar.kapasitas}\r\n                            kelas={kamar.kelas}\r\n                            terisi={kamar.terisi}\r\n                            kosong={kamar.kosong}\r\n                          />\r\n                        </Grid>\r\n                      );\r\n                    })}\r\n                  </Grid>\r\n                </SwiperSlide>\r\n              );\r\n            })}\r\n        </Swiper>\r\n      );\r\n    } else {\r\n      html = (\r\n        <Grid container spacing={2}>\r\n          {stateKamar &&\r\n            stateKamar.map((kamar, index) => {\r\n              return (\r\n                <Grid item xs={12} key={\"kamar\" + \"-\" + index}>\r\n                  <CardKamar\r\n                    ruang={kamar.ruang}\r\n                    kapasitas={kamar.kapasitas}\r\n                    kelas={kamar.kelas}\r\n                    terisi={kamar.terisi}\r\n                    kosong={kamar.kosong}\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n        </Grid>\r\n      );\r\n    }\r\n    return html;\r\n  };\r\n  return (\r\n    <Box className={classes.box}>\r\n      <Grid container spacing={1} justifyContent={\"center\"}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h5\" align=\"center\">\r\n            DATA KAMAR\r\n          </Typography>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          container\r\n          justifyContent={\"center\"}\r\n          alignItems={\"center\"}\r\n          direction={\"column\"}\r\n        >\r\n          <img src={qrCode} className={classes.qr} alt=\"Kode QR\" />\r\n          <Typography variant=\"body1\">\r\n            https://api.rsudcengkareng.com\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <br></br>\r\n      <Content />\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    stateKamarMulti: state.master.kamarMulti,\r\n    stateKamar: state.master.kamar,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    actGetDataKamar: (body, action) => dispatch(getDataKamar(body, action)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListKamar);\r\n"],"names":["useStyles","makeStyles","box","margin","qr","width","height","connect","state","stateKamarMulti","master","kamarMulti","stateKamar","kamar","dispatch","actGetDataKamar","body","action","getDataKamar","props","SwiperCore","Autoplay","React","classes","Content","window","innerWidth","slidesPerView","autoplay","delay","map","item","rootI","container","spacing","index","xs","ruang","kapasitas","kelas","terisi","kosong","className","justifyContent","variant","align","alignItems","direction","src","qrCode","alt"],"sourceRoot":""}